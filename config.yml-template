# Name of the microservice.
#microservice_name: sandbox-service

# A prefix of the stack in the cloud with maximum 8 characters.
#stack_name_prefix: default0

# A boolean that turns on/off debug mode.
# SECURITY WARNING: don't run with debug turned on in production!
debug: True

# A secret key used by django to provide cryptographic signing.
# SECURITY WARNING: change this key for production environment and keep it secret!
#django_secret_key: "-^mu0=6s@*x4jdbrz5yr!++p*02#%m$_4&0uw8h1)&r5u!v=12"

# A list of strings representing the host/domain names that this Django site can serve.
#allowed_hosts: []

# If True, the whitelist will not be used and all origins will be accepted.
#cors_origin_allow_all: True

# A list of origins that are authorized to make cross-site HTTP requests.
#cors_origin_whitelist: []

authentication:
    # Whether the REST API authentication is on.
    # If set to False, other authentication variables are not used.
    #authenticated_rest_api: False

    # List of dictionaries representing OIDC providers that are allowed.
    # Mandatory attributes: 'issuer'. Optional attributes: 'userinfo_endpoint', 'well_known_config'.
    # Example of such dictionary:
    # {issuer: http://example.com, userinfo_endpoint: http://example.com/userinfo}
    allowed_oidc_providers: []

    # User and Group roles registration endpoint URL.
    roles_registration_url: ""

    # User and Group roles acquisition endpoint URL.
    roles_acquisition_url: ""

application_configuration:
    # The URL of the head server.
    #head_host: head

    # The URL of OpenStack Identity service API.
    os_auth_url: ""

    # The ID of application credentials to authenticate at OpenStack cloud platform.
    os_application_credential_id: ""

    # The secret string of APPLICATION_CREDENTIAL_ID.
    os_application_credential_secret: ""

    # The OpenStack console type. One of: novnc, xvpvnc, spice-html5, rdp-html5, serial, webmks.
    #os_console_type: spice-html5

    # AWS specific configuration.
    # Keeps configuration file backwards compatible.
    # If AWS configuration is present, it will be used instead of OpenStack configuration.
    # aws:
    #   # The access key ID for AWS API.
    #   access_key_id: ""

    #   # The secret access key for AWS API.
    #   secret_access_key: ""

    #   # The region of AWS where the base infrastructure is deployed.
    #   region: ""

    #   # The availability zone of AWS where the base infrastructure is deployed.
    #   availability_zone: ""

    #   # The name of base VPC, where MAN instance will be deployed.
    #   base_vpc: "Base Net"

    #   # The name of base subnet, where MAN instance will be deployed.
    #   base_subnet: "Base Subnet"

    # The path to project log file.
    #log_file: sandbox-service.log

    # The level of log verbosity. One of: NOTSET, DEBUG, INFO, WARNING, ERROR, FATAL, CRITICAL.
    #log_level: INFO

    # The name of user used for communication with Git repository.
    git_user: git

    # A dictionary of git providers where we can access private repositories, with the corresponding git access token.
    git_providers: {
        "https://gitlab.com/": "access-token",
        "https://github.com/": "access-token",
    }

    # The URL of Ansible networking Git repository.
    ansible_networking_url: ""

    # The rev of Ansible networking Git repository.
    #ansible_networking_rev: master

    # The pattern to be replaced in image names of sandbox definitions.
    #image_naming_strategy:
    #    pattern: ^
    #    replace: ''

    # The mapping of flavor names to be replaced in sandbox definition.
    #flavor_mapping: {"flavor_alias": "openstack_name"}

    # The object that represents SSH Host entry (see man page of ssh_config).
    proxy_jump_to_man:
        Host: ""
        Port: 22
        User: ""
        IdentityFile: ""

    # Timeout of sandbox (stack) creation in cloud in seconds.
    #sandbox_build_timeout: 7200

    # Timeout of sandbox (stack) deletion in cloud in seconds.
    #sandbox_delete_timeout : 3600

    # Timeout for Ansible.
    #sandbox_ansible_timeout: 7200

    # The name of the Docker image that is able to run Ansible playbook.
    #ansible_docker_image: ghcr.io/cyberrangecz/crczp-ansible-runner:1.4.1

    # The name of the Docker network that the Runner will use.
    #ansible_docker_network: bridge

    # The settings for the ansible runner container.
    # ansible_runner_settings:
        # The container backend. One of: docker, kubernetes.
        #backend: docker

        # The namespace where the container will be created. Only used when backend is kubernetes.
        #namespace: crczp

        # The path to local temporary directory where CyberRangeCZ Platform will prepare Docker volumes if container
        # backend is set to docker. Path to temporary directory of similar purpose in persistent
        # volume if backend is kubernetes.
        #volumes_path: /tmp/crczp

        # Name of persistent volume claim, only used when backend is kubernetes.
        #persistent_volume_claim_name: sandbox-service

    # The address of answers-storage REST API
    #answers_storage_api: http://answers-storage:8087/answers-storage/api/v1

    # A path to directory of CA certificates or file of CA certificates, i.e. CA bundle.
    # Use in case of self-signed certificates in related services.
    #ssl_ca_certificate_verify: ""

    # Configuration for Terraform client
    terraform_configuration:
        # The type of backend that Terraform is using.
        # Choices:
        #  * local: storing state file to local disk (suitable for development)
        #  * pg: storing state file to Postgres database (specified in the `database` section)
        #  * kubernetes: storing state file as Kubernetes secret (preferred)
        backend_type: 'local'

    # SMPT server used for sending the email
    #smtp_server: ""

    # Port used by the used protocol, ex. ssl: 465
    #smtp_port: 25

    # Choose email encryption protocol, must fit with configured port
    # Options: SSL, TLS, INSECURE
    #smtp_encryption: INSECURE

    # Email used to send allocation notifications
    #sender_email: "sandbox.service@cyberrange.cz"

    # Password for sender_email, not necessary if using INSECURE encryption
    #sender_email_password: ""

    sandbox_configuration:
        # The name or ID of network in OpenStack where all sandboxes will be deployed.
        #base_network: base_network

        # The name of the image in OpenStack that will be used for MAN. A dedicated debian image is recommended.
        man_image: ""

        # The name of user in MAN.
        man_user: ""

        # The name of the flavor in OpenStack that will be used for MAN.
        man_flavor: ""

        # The cidr notation of network between MAN and every other node in sandbox.
        #sb_man_cidr: 192.168.128.0/17

        # The list of IP addresses to custom DNS servers.
        #dns_name_servers: []

    # Django database settings.
    database:
        # The database backend to use.
        engine: "django.db.backends.postgresql"

        # Which host to use when connecting to the database.
        #host: "localhost"

        # The name of the database to use.
        #name: "postgres"

        # The password to use when connecting to the database.
        #password: "postgres"

        # The port to use when connecting to the database.
        #port: "5432"

        # The username to use when connecting to the database.
        #user: "postgres"

    # Django redis settings for rq queues.
    redis:
        host: "localhost"
        port: 6379
        db: 0
        # In seconds
        default_cache_timeout: 86400
        uag_cache_timeout: 86400
        topology_cache_timeout: 86400
