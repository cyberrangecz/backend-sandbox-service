"""
Django settings for kypo.sandbox_service_project project.

Generated by 'django-admin startproject' using Django 2.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
from kypo.sandbox_common_lib.kypo_service_config import KypoServiceConfig

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(
    os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

KYPO_SANDBOX_SERVICE_CONFIG_PATH = os.path.join(BASE_DIR, 'config.yml')
KYPO_SERVICE_CONFIG = KypoServiceConfig.from_file(KYPO_SANDBOX_SERVICE_CONFIG_PATH)
KYPO_CONFIG = KYPO_SERVICE_CONFIG.app_config
os.environ['REQUESTS_CA_BUNDLE'] = KYPO_CONFIG.ssl_ca_certificate_verify

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '-^mu0=6s@*x4jdbrz5yr!++p*02#%m$_4&0uw8h1)&r5u!v=12'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = KYPO_SERVICE_CONFIG.debug

ALLOWED_HOSTS = tuple(KYPO_SERVICE_CONFIG.allowed_hosts)

# Application definition

CORS_ORIGIN_ALLOW_ALL = KYPO_SERVICE_CONFIG.cors_origin_allow_all
CORS_ORIGIN_WHITELIST = tuple(KYPO_SERVICE_CONFIG.cors_origin_whitelist)

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'drf_yasg',
    'corsheaders',
    'django_rq',

    'kypo.sandbox_ansible_app.apps.KypoSandboxAnsibleAppConfig',
    'kypo.sandbox_definition_app.apps.KypoSandboxDefinitionAppConfig',
    'kypo.sandbox_instance_app.apps.KypoSandboxInstanceAppConfig',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'kypo.sandbox_service_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'kypo.sandbox_service_project.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    },
    'production': {
        'ENGINE': 'django.db.backends.postgresql',
        'HOST': 'localhost',
        'NAME': 'postgres',
        'PASSWORD': 'postgres',
        'PORT': 5432,
        'USER': 'postgres'
    }
}
# TODO review this quick fix in the future
if not DEBUG:
    DATABASES['default'] = DATABASES['production']

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Europe/Prague'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATIC_URL = f'/{KYPO_SERVICE_CONFIG.microservice_name}/static/'

REST_FRAMEWORK = {
    'EXCEPTION_HANDLER': 'kypo.sandbox_common_lib.exc_handler.custom_exception_handler',
    'DEFAULT_PERMISSION_CLASSES': ('rest_framework.permissions.AllowAny', ),

    'DEFAULT_PAGINATION_CLASS': 'kypo.sandbox_common_lib.pagination.PageNumberWithPageSizePagination',
    'PAGE_SIZE': 50,
}

SWAGGER_SETTINGS = {
    'DEFAULT_PAGINATOR_INSPECTORS': [
        'kypo.sandbox_common_lib.inspectors.PageNumberWithPageSizePaginationInspector',
        'drf_yasg.inspectors.DjangoRestResponsePagination',
        'drf_yasg.inspectors.CoreAPICompatInspector',
    ],
}

if KYPO_SERVICE_CONFIG.authentication.authenticated_rest_api:
    REST_FRAMEWORK.update({
        'DEFAULT_PERMISSION_CLASSES': (
            'kypo.sandbox_common_lib.permissions.ModelPermissions',
        ),
        'DEFAULT_AUTHENTICATION_CLASSES': (
            # For testing purposes, uncomment BasicAuthentication.
            # It allows login using name & password (nice for permission testing).
            # 'rest_framework.authentication.BasicAuthentication',
            'csirtmu.oidc_client.authentication.JWTAccessTokenAuthentication',
        ),
    })

    OIDC_AUTH = {
        # (Optional) Function that resolves id_token into user.
        # This function receives a request and an id_token dict and expects to
        # return a User object. The default implementation tries to find the user
        # based on username (natural key) taken from the 'sub'-claim of the
        # id_token.
        'OIDC_RESOLVE_USER_FUNCTION': 'csirtmu.uag_auth.auth.get_or_create_user',
    }

    CSIRTMU_OIDC_CLIENT = {
        # Need to be set when using JWTAccessTokenAuthentication,
        # which supports multiple OIDC providers (parsing them from the token).
        # Only those listed here will be allowed.
        'ALLOWED_OIDC_PROVIDERS': tuple(KYPO_SERVICE_CONFIG.authentication.allowed_oidc_providers)
    }

    CSIRTMU_UAG_AUTH = {
        # User and Group roles registration endpoint URL
        'ROLES_REGISTRATION_URL': KYPO_SERVICE_CONFIG.authentication.roles_registration_url,
        # User and Group roles acquisition endpoint URL
        'ROLES_ACQUISITION_URL': KYPO_SERVICE_CONFIG.authentication.roles_acquisition_url,
        # Path to roles definition file
        'ROLES_DEFINITION_PATH': os.path.join(BASE_DIR,
                                              'kypo/sandbox_service_project/permissions/roles.yml'),

        # User and Group information configuration
        'MICROSERVICE_NAME': KYPO_SERVICE_CONFIG.microservice_name,
        'ROLE_PREFIX': "ROLE",
        'ENDPOINT': __package__,
    }

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
        'LOCATION': 'call_cache',
        'TIMEOUT': None,  # Expire never
        'OPTIONS': {
            'MAX_ENTRIES': 300  # Django default value is 300 (2 kB per item = 0.6 MB)
        }
    }
}

RQ_QUEUES = {
    'default': {
        'HOST': 'localhost',
        'PORT': 6379,
        'DB': 0,
    },
    'openstack': {
        'HOST': 'localhost',
        'PORT': 6379,
        'DB': 0,
    },
    'ansible': {
        'HOST': 'localhost',
        'PORT': 6379,
        'DB': 0,
    }
}

RQ_SHOW_ADMIN_LINK = True

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "rq_console": {
            'format': '%(asctime)s %(levelname)s %(message)s',
            "datefmt": "%H:%M:%S",
        },
    },
    "handlers": {
        "rq_console": {
            "level": KYPO_CONFIG.log_level,
            "class": "rq.utils.ColorizingStreamHandler",
            "formatter": "rq_console",
            "exclude": ["%(asctime)s"],
        },
    },
    'loggers': {
        "rq.worker": {
            "handlers": ["rq_console"],
            "level": KYPO_CONFIG.log_level,
        },
    }
}
