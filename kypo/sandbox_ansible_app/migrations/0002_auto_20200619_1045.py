# Generated by Django 2.2.13 on 2020-06-19 08:45

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sandbox_ansible_app', '0001_initial'),
        ('sandbox_instance_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserAnsibleCleanupStage',
            fields=[
                ('cleanupstage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sandbox_instance_app.CleanupStage')),
                ('cleanup_request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sandbox_instance_app.CleanupRequest')),
            ],
            options={
                'abstract': False,
            },
            bases=('sandbox_instance_app.cleanupstage',),
        ),
        migrations.CreateModel(
            name='UserAnsibleAllocationStage',
            fields=[
                ('allocationstage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sandbox_instance_app.AllocationStage')),
                ('repo_url', models.TextField(help_text='URL of the Ansible repository.')),
                ('rev', models.TextField(help_text='Revision of the Ansible repository.')),
                ('allocation_request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sandbox_instance_app.AllocationRequest')),
            ],
            options={
                'abstract': False,
            },
            bases=('sandbox_instance_app.allocationstage',),
        ),
        migrations.CreateModel(
            name='NetworkingAnsibleCleanupStage',
            fields=[
                ('cleanupstage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sandbox_instance_app.CleanupStage')),
                ('cleanup_request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sandbox_instance_app.CleanupRequest')),
            ],
            options={
                'abstract': False,
            },
            bases=('sandbox_instance_app.cleanupstage',),
        ),
        migrations.CreateModel(
            name='NetworkingAnsibleAllocationStage',
            fields=[
                ('allocationstage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sandbox_instance_app.AllocationStage')),
                ('repo_url', models.TextField(help_text='URL of the Ansible repository.')),
                ('rev', models.TextField(help_text='Revision of the Ansible repository.')),
                ('allocation_request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sandbox_instance_app.AllocationRequest')),
            ],
            options={
                'abstract': False,
            },
            bases=('sandbox_instance_app.allocationstage',),
        ),
        migrations.AddField(
            model_name='dockercontainer',
            name='allocation_stage',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sandbox_instance_app.AllocationStage'),
        ),
        migrations.AddField(
            model_name='ansibleoutput',
            name='allocation_stage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outputs', to='sandbox_instance_app.AllocationStage'),
        ),
    ]
